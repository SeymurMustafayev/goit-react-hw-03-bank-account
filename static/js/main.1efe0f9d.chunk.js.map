{"version":3,"sources":["components/css.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","components/App.js","index.js"],"names":["module","exports","Controls","state","amount","handleInputChange","e","target","name","value","setState","onDeposit","props","Number","onWithdraw","this","className","s","input","onChange","type","button","onClick","Component","Balance","balance","income","expenses","TransactionHistory","items","historyContainer","map","el","key","id","date","Dashboard","transactions","showModal","moneyTransaction","toast","warn","position","POSITION","TOP_CENTER","newOnDeposit","uuid","Date","toLocaleString","error","newWithdraw","balanceChange","localStorage","getItem","ourBalance","JSON","parse","console","log","prevProps","prevState","setItem","stringify","reduce","acc","item","dashboardContainer","blueBox","transactionHistoryBox","modal","show__modal","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1efe0f9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardContainer\":\"css_dashboardContainer___VMl1\",\"blueBox\":\"css_blueBox__3gdkn\",\"transactionHistoryBox\":\"css_transactionHistoryBox__1eRza\",\"balance\":\"css_balance__2SGza\",\"income\":\"css_income__9iwyz\",\"expenses\":\"css_expenses__1pMdV\",\"controls\":\"css_controls__8gK8l\",\"input\":\"css_input__1S0TP\",\"button\":\"css_button__3rdMG\",\"historyContainer\":\"css_historyContainer__10aH9\",\"modal\":\"css_modal__2GFxM\",\"show__modal\":\"css_show__modal__1tnO3\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from '../css.module.css';\n\nexport default class Controls extends Component {\n  static propTypes = {\n    onDeposit: PropTypes.func.isRequired,\n    onWithdraw: PropTypes.func.isRequired,\n  };\n\n  state = {\n    amount: '',\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  onDeposit = () => {\n    const { onDeposit } = this.props;\n    onDeposit(Number(this.state.amount));\n    this.setState({ amount: '' });\n  };\n\n  onWithdraw = () => {\n    const { onWithdraw } = this.props;\n    onWithdraw(Number(this.state.amount));\n    this.setState({ amount: '' });\n  };\n\n  render() {\n    const { amount } = this.state;\n    return (\n      <div>\n        <section className={s.Controls}>\n          <input\n            className={s.input}\n            onChange={this.handleInputChange}\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n          />\n          <button className={s.button} onClick={this.onDeposit} type=\"button\">\n            Deposit\n          </button>\n          <button className={s.button} onClick={this.onWithdraw} type=\"button\">\n            Withdraw\n          </button>\n        </section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../css.module.css';\n\nconst Balance = ({ balance, income, expenses }) => (\n  <section className={s.balance}>\n    <span>\n      <span className={s.income}>&#8593;</span>\n      {income}$\n    </span>\n    <span>\n      <span className={s.expenses}>&#8595;</span>\n      {expenses}$\n    </span>\n    <span>Balance: {balance}$</span>\n  </section>\n);\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  income: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../css.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={s.historyContainer}>\n    <thead>\n      <tr>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(el => (\n        <tr key={el.id}>\n          <td>{el.type}</td>\n          <td>{el.amount}</td>\n          <td>{el.date}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nexport default TransactionHistory;\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.number,\n      date: PropTypes.string,\n    }),\n  ).isRequired,\n};\n","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport uuid from 'uuid/v1';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport s from '../css.module.css';\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n    showModal: false,\n  };\n\n  componentDidMount() {\n    try {\n      const balanceChange = localStorage.getItem('transactions');\n      const ourBalance = localStorage.getItem('balance');\n      if (balanceChange) {\n        this.setState({ transactions: JSON.parse(balanceChange) });\n      }\n      if (ourBalance) {\n        this.setState({ balance: JSON.parse(ourBalance) });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions, balance } = this.state;\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n      localStorage.setItem('balance', JSON.stringify(balance));\n    }\n  }\n\n  onDeposit = moneyTransaction => {\n    if (moneyTransaction === 0) {\n      return toast.warn('Введите сумму для проведения операции!', {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    }\n    const newOnDeposit = {\n      id: uuid(),\n      type: 'deposit',\n      amount: moneyTransaction,\n      date: new Date().toLocaleString(),\n    };\n    this.setState(state => ({\n      transactions: [newOnDeposit, ...state.transactions],\n      balance: state.balance + moneyTransaction,\n    }));\n    // return '';\n  };\n\n  onWithdraw = moneyTransaction => {\n    if (moneyTransaction === 0) {\n      return toast.warn('Введите сумму для проведения операции!', {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    }\n    if (moneyTransaction > this.state.balance) {\n      return toast.error(\n        'На счету недостаточно средств для проведения операции!',\n        {\n          position: toast.POSITION.TOP_CENTER,\n        },\n      );\n    }\n    const newWithdraw = {\n      id: uuid(),\n      type: 'withdraw',\n      amount: moneyTransaction,\n      date: new Date().toLocaleString(),\n    };\n    this.setState(state => ({\n      transactions: [newWithdraw, ...state.transactions],\n      balance: state.balance - moneyTransaction,\n    }));\n  };\n\n  showModal = () => {\n    this.setState(state => ({ showModal: !state.showModal }));\n  };\n\n  render() {\n    const { transactions, balance, showModal } = this.state;\n\n    const income = transactions.reduce(\n      (acc, item) => (item.type === 'deposit' ? acc + item.amount : acc),\n      0,\n    );\n\n    const expenses = transactions.reduce(\n      (acc, item) => (item.type === 'withdraw' ? acc + item.amount : acc),\n      0,\n    );\n\n    return (\n      <>\n        <div className={s.dashboardContainer}>\n          <div className={s.blueBox}>\n            <Controls onDeposit={this.onDeposit} onWithdraw={this.onWithdraw} />\n          </div>\n          <Balance balance={balance} income={income} expenses={expenses} />\n          <div className={s.transactionHistoryBox}>\n            <TransactionHistory items={transactions} />\n          </div>\n\n          <ToastContainer />\n          <button onClick={this.showModal}>show</button>\n          {/* {showModal && <div className={s.modal}>Modal</div>} */}\n          <div className={`${s.modal} ${showModal ? s.show__modal : ''}`}>\n            Modal\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport Dashboard from './Dashboard/Dashboard';\n\nconst App = () => (\n  <div>\n    <Dashboard />\n  </div>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}